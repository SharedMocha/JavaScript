//check this file ->https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/diagrams/fetch+POST+transparent.svg


fetch('https://api-to-call.com/endpoint', {
//The settings object you passed to the fetch() function will contain two properties: method, with a value of 'POST', and body, with a value of JSON.stringify({id: '200'}).This second argument determines that this request is a POST request and what information will be sent to the API.
  method: 'POST',
  body: JSON.stringify({id: "200"})
}).then(response => {
//Chain a .then() method to the fetch() function and pass it the success callback function as its first parameter. Pass in response as an argument for the callback function
//The code inside .then() will execute when the promise returned from fetch() is resolved.

  if(response.ok){
  //heck the ok property of the response object inside of a conditional statement. In the code block of the conditional statement, return response.json().When returned, this information will be passed on to the next .then() callback function.
	  return response.json();  
  }
	throw new Error('Request failed!'); //This error will be raised if we get back some status error.
}, networkError => {
  console.log(networkError.message);
}).then(jsonResponse => {
  console.log(jsonResponse);
})


-------------------------advanced---------
// AJAX functions
const shortenUrl = () => {
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten})
  
	fetch(url, {
    method: 'POST',
    headers: {
      'Content-type': 'application/json',
      'apikey': apiKey
    },
    body: data
  })
}
